---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: featurestores.feast.dev
spec:
  group: feast.dev
  names:
    kind: FeatureStore
    listKind: FeatureStoreList
    plural: featurestores
    shortNames:
    - feast
    singular: featurestore
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: FeatureStore is the Schema for the featurestores API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: FeatureStoreSpec defines the desired state of FeatureStore
            properties:
              feastProject:
                description: FeastProject is the Feast project id. This can be any
                  alphanumeric string with underscores, but it cannot start with an
                  underscore. Required.
                pattern: ^[A-Za-z0-9][A-Za-z0-9_]*$
                type: string
              services:
                properties:
                  offlineStore:
                    properties:
                      persistence:
                        properties:
                          file:
                            properties:
                              pvc:
                                properties:
                                  mountPath:
                                    description: Default path depend on Feast service.
                                    type: string
                                  name:
                                    description: The name of the PersistenceVolumeClaim
                                      to be created, or reused it is already there
                                    type: string
                                  storage:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: |-
                                      Default value depend on Feast service.
                                      Only for newly created PVC.
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  storageClassName:
                                    description: |-
                                      Name of the StorageClass required by the claim.
                                      Only for newly created PVC.
                                    type: string
                                type: object
                              type:
                                enum:
                                - dask
                                - duckdb
                                type: string
                            type: object
                          store:
                            properties:
                              secretRef:
                                description: |-
                                  LocalObjectReference contains enough information to let you locate the
                                  referenced object inside the same namespace.
                                properties:
                                  name:
                                    description: |-
                                      Name of the referent.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind, uid?
                                    type: string
                                type: object
                                x-kubernetes-map-type: atomic
                              type:
                                enum:
                                - snowflake
                                - bigquery
                                - redshift
                                - spark
                                - postgres
                                - trino
                                - mssql
                                type: string
                            required:
                            - type
                            type: object
                        type: object
                        x-kubernetes-validations:
                        - message: One file or store persistence is allowed.
                          rule: '!(has(self.file) && has(self.store))'
                        - message: Either file or store persistence are required.
                          rule: has(self.file) || has(self.store)
                    type: object
                  onlineStore:
                    properties:
                      persistence:
                        properties:
                          file:
                            properties:
                              path:
                                type: string
                              pvc:
                                properties:
                                  mountPath:
                                    description: Default path depend on Feast service.
                                    type: string
                                  name:
                                    description: The name of the PersistenceVolumeClaim
                                      to be created, or reused it is already there
                                    type: string
                                  storage:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: |-
                                      Default value depend on Feast service.
                                      Only for newly created PVC.
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  storageClassName:
                                    description: |-
                                      Name of the StorageClass required by the claim.
                                      Only for newly created PVC.
                                    type: string
                                type: object
                            type: object
                            x-kubernetes-validations:
                            - message: Ephemeral stores must have absolute paths.
                              rule: '!has(self.pvc) ? self.path.startsWith(''/'')
                                : true'
                            - message: PVC path must be a file name only, with no
                                slashes.
                              rule: 'has(self.pvc) ? !self.path.startsWith(''/'')
                                : true'
                            - message: Online store does not support S3 or GS buckets.
                              rule: '!self.path.startsWith(''s3://'') && !self.path.startsWith(''gs://'')'
                          store:
                            properties:
                              secretRef:
                                description: |-
                                  LocalObjectReference contains enough information to let you locate the
                                  referenced object inside the same namespace.
                                properties:
                                  name:
                                    description: |-
                                      Name of the referent.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind, uid?
                                    type: string
                                type: object
                                x-kubernetes-map-type: atomic
                              type:
                                enum:
                                - snowflake
                                - redis
                                - ikv
                                - datastore
                                - dynamodb
                                - bigtable
                                - postgres
                                - cassandra
                                - mysql
                                - hazelcast
                                - singlestore
                                type: string
                            required:
                            - type
                            type: object
                        type: object
                        x-kubernetes-validations:
                        - message: One file or store persistence is allowed.
                          rule: '!(has(self.file) && has(self.store))'
                        - message: Either file or store persistence are required.
                          rule: has(self.file) || has(self.store)
                    type: object
                  registry:
                    properties:
                      persistence:
                        properties:
                          file:
                            properties:
                              path:
                                type: string
                              pvc:
                                properties:
                                  mountPath:
                                    description: Default path depend on Feast service.
                                    type: string
                                  name:
                                    description: The name of the PersistenceVolumeClaim
                                      to be created, or reused it is already there
                                    type: string
                                  storage:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: |-
                                      Default value depend on Feast service.
                                      Only for newly created PVC.
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  storageClassName:
                                    description: |-
                                      Name of the StorageClass required by the claim.
                                      Only for newly created PVC.
                                    type: string
                                type: object
                              s3_additional_kwargs:
                                additionalProperties:
                                  type: string
                                type: object
                            type: object
                            x-kubernetes-validations:
                            - message: Ephemeral stores must have absolute paths.
                              rule: '!has(self.pvc) ? (self.path.startsWith(''/'')
                                || self.path.startsWith(''s3://'') || self.path.startsWith(''gs://''))
                                : true'
                            - message: PVC path must be a file name only, with no
                                slashes.
                              rule: 'has(self.pvc) ? !self.path.startsWith(''/'')
                                : true'
                            - message: PVC persistence does not support S3 or GS buckets.
                              rule: 'has(self.pvc) ? !(self.path.startsWith(''s3://'')
                                || self.path.startsWith(''gs://'')) : true'
                            - message: Additional S3 settings are available only for
                                S3 buckets.
                              rule: 'has(self.s3_additional_kwargs) ? self.path.startsWith(''s3://'')
                                : true'
                          store:
                            properties:
                              secretRef:
                                description: |-
                                  LocalObjectReference contains enough information to let you locate the
                                  referenced object inside the same namespace.
                                properties:
                                  name:
                                    description: |-
                                      Name of the referent.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind, uid?
                                    type: string
                                type: object
                                x-kubernetes-map-type: atomic
                              type:
                                enum:
                                - sql
                                - snowflake
                                type: string
                            required:
                            - type
                            type: object
                        type: object
                        x-kubernetes-validations:
                        - message: One file or store persistence is allowed.
                          rule: '!(has(self.file) && has(self.store))'
                        - message: Either file or store persistence are required.
                          rule: has(self.file) || has(self.store)
                    type: object
                type: object
            required:
            - feastProject
            type: object
          status:
            description: FeatureStoreStatus defines the observed state of FeatureStore
            properties:
              applied:
                description: FeatureStoreSpec defines the desired state of FeatureStore
                properties:
                  feastProject:
                    description: FeastProject is the Feast project id. This can be
                      any alphanumeric string with underscores, but it cannot start
                      with an underscore. Required.
                    pattern: ^[A-Za-z0-9][A-Za-z0-9_]*$
                    type: string
                  services:
                    properties:
                      offlineStore:
                        properties:
                          persistence:
                            properties:
                              file:
                                properties:
                                  pvc:
                                    properties:
                                      mountPath:
                                        description: Default path depend on Feast
                                          service.
                                        type: string
                                      name:
                                        description: The name of the PersistenceVolumeClaim
                                          to be created, or reused it is already there
                                        type: string
                                      storage:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: |-
                                          Default value depend on Feast service.
                                          Only for newly created PVC.
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      storageClassName:
                                        description: |-
                                          Name of the StorageClass required by the claim.
                                          Only for newly created PVC.
                                        type: string
                                    type: object
                                  type:
                                    enum:
                                    - dask
                                    - duckdb
                                    type: string
                                type: object
                              store:
                                properties:
                                  secretRef:
                                    description: |-
                                      LocalObjectReference contains enough information to let you locate the
                                      referenced object inside the same namespace.
                                    properties:
                                      name:
                                        description: |-
                                          Name of the referent.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion, kind, uid?
                                        type: string
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  type:
                                    enum:
                                    - snowflake
                                    - bigquery
                                    - redshift
                                    - spark
                                    - postgres
                                    - trino
                                    - mssql
                                    type: string
                                required:
                                - type
                                type: object
                            type: object
                            x-kubernetes-validations:
                            - message: One file or store persistence is allowed.
                              rule: '!(has(self.file) && has(self.store))'
                            - message: Either file or store persistence are required.
                              rule: has(self.file) || has(self.store)
                        type: object
                      onlineStore:
                        properties:
                          persistence:
                            properties:
                              file:
                                properties:
                                  path:
                                    type: string
                                  pvc:
                                    properties:
                                      mountPath:
                                        description: Default path depend on Feast
                                          service.
                                        type: string
                                      name:
                                        description: The name of the PersistenceVolumeClaim
                                          to be created, or reused it is already there
                                        type: string
                                      storage:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: |-
                                          Default value depend on Feast service.
                                          Only for newly created PVC.
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      storageClassName:
                                        description: |-
                                          Name of the StorageClass required by the claim.
                                          Only for newly created PVC.
                                        type: string
                                    type: object
                                type: object
                                x-kubernetes-validations:
                                - message: Ephemeral stores must have absolute paths.
                                  rule: '!has(self.pvc) ? self.path.startsWith(''/'')
                                    : true'
                                - message: PVC path must be a file name only, with
                                    no slashes.
                                  rule: 'has(self.pvc) ? !self.path.startsWith(''/'')
                                    : true'
                                - message: Online store does not support S3 or GS
                                    buckets.
                                  rule: '!self.path.startsWith(''s3://'') && !self.path.startsWith(''gs://'')'
                              store:
                                properties:
                                  secretRef:
                                    description: |-
                                      LocalObjectReference contains enough information to let you locate the
                                      referenced object inside the same namespace.
                                    properties:
                                      name:
                                        description: |-
                                          Name of the referent.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion, kind, uid?
                                        type: string
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  type:
                                    enum:
                                    - snowflake
                                    - redis
                                    - ikv
                                    - datastore
                                    - dynamodb
                                    - bigtable
                                    - postgres
                                    - cassandra
                                    - mysql
                                    - hazelcast
                                    - singlestore
                                    type: string
                                required:
                                - type
                                type: object
                            type: object
                            x-kubernetes-validations:
                            - message: One file or store persistence is allowed.
                              rule: '!(has(self.file) && has(self.store))'
                            - message: Either file or store persistence are required.
                              rule: has(self.file) || has(self.store)
                        type: object
                      registry:
                        properties:
                          persistence:
                            properties:
                              file:
                                properties:
                                  path:
                                    type: string
                                  pvc:
                                    properties:
                                      mountPath:
                                        description: Default path depend on Feast
                                          service.
                                        type: string
                                      name:
                                        description: The name of the PersistenceVolumeClaim
                                          to be created, or reused it is already there
                                        type: string
                                      storage:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: |-
                                          Default value depend on Feast service.
                                          Only for newly created PVC.
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      storageClassName:
                                        description: |-
                                          Name of the StorageClass required by the claim.
                                          Only for newly created PVC.
                                        type: string
                                    type: object
                                  s3_additional_kwargs:
                                    additionalProperties:
                                      type: string
                                    type: object
                                type: object
                                x-kubernetes-validations:
                                - message: Ephemeral stores must have absolute paths.
                                  rule: '!has(self.pvc) ? (self.path.startsWith(''/'')
                                    || self.path.startsWith(''s3://'') || self.path.startsWith(''gs://''))
                                    : true'
                                - message: PVC path must be a file name only, with
                                    no slashes.
                                  rule: 'has(self.pvc) ? !self.path.startsWith(''/'')
                                    : true'
                                - message: PVC persistence does not support S3 or
                                    GS buckets.
                                  rule: 'has(self.pvc) ? !(self.path.startsWith(''s3://'')
                                    || self.path.startsWith(''gs://'')) : true'
                                - message: Additional S3 settings are available only
                                    for S3 buckets.
                                  rule: 'has(self.s3_additional_kwargs) ? self.path.startsWith(''s3://'')
                                    : true'
                              store:
                                properties:
                                  secretRef:
                                    description: |-
                                      LocalObjectReference contains enough information to let you locate the
                                      referenced object inside the same namespace.
                                    properties:
                                      name:
                                        description: |-
                                          Name of the referent.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion, kind, uid?
                                        type: string
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  type:
                                    enum:
                                    - sql
                                    - snowflake
                                    type: string
                                required:
                                - type
                                type: object
                            type: object
                            x-kubernetes-validations:
                            - message: One file or store persistence is allowed.
                              rule: '!(has(self.file) && has(self.store))'
                            - message: Either file or store persistence are required.
                              rule: has(self.file) || has(self.store)
                        type: object
                    type: object
                required:
                - feastProject
                type: object
              clientConfigMap:
                type: string
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              feastVersion:
                type: string
              phase:
                type: string
              serviceUrls:
                description: ServiceUrls
                properties:
                  registry:
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
